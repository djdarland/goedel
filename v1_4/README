
Directories in release 1.4 :
============================

/src:		Prolog and C source code for the Goedel system.

/lib:		library of system modules, including files for their export
		parts (.exp files).

/doc:		the user manual, and a paper on the ground representation.

/programs: 	interesting example programs.
		/programs/book contains all programs (except system modules)
		appearing in the Goedel book.  /program/demo contains
		demonstration programs.  Check the README files in the
		sub-directories for more details.

/runtime:	the executable binary Goedel system, including the executable
		'goedel', system files with postfix '.ql' and a SICStus
		Prolog supporting directory /runtime/Runtime.


How to install the Goedel system:
=================================

There are two approaches to installing the Goedel system.

If you have SICStus Prolog version 2.1 #6 (or later), you can compile the 
Goedel system and install the saved states.  See Section "How to compile the
Goedel system". 

If you don't have SICStus Prolog, you can use the executable binary Goedel
system which was prepared using SICStus Prolog's runtime system.  See Section
"How to use the executable binary Goedel".  The binary Goedel is executable
on Sun/4 SPARCstations. It is generally slower (but only slightly) than
compiled Goedel.

Note that the intermediate files (particularly the '.pl' files generated by
these two different systems are not compatible.


How to compile the Goedel system:
=================================

You will need SICStus Prolog version 2.1 #6 (or later) to compile the Goedel
system.  In /src directory, change the variables GOEDEL, BIN_DIR and SICSTUS
in Makefile to the appropriate paths and then run:
	make install

An executable saved states called 'goedel' will be installed in BIN_DIR.
This file occupies about 5.4 MBytes.


How to use the executable binary Goedel:
=======================================

1. In the runtime directory, there is an executable file called 'goedel'.       
   Running this file starts the Goedel system.  It needs to be installed
   in a directory which users can access, for example, /usr/local/bin.  

2. The runtime directory has to be moved to somewhere globally
   accessable, for example, /usr/local/lib/goedel.

3. To run 'goedel', users have to set the following environment variables:
      GOEDEL_RUNTIME : the full path to /goedel/runtime
      SP_PATH        : the same as GOEDEL_RUNTIME

   Note SP_PATH is the environment variable used by SICStus Prolog's runtime
   systems.  Changing it might cause problems to your other SICStus runtime
   systems, if you have a SICStus Prolog which is different from the one with
   which the Goedel runtime system was prepared.

   These environment variables can be set in users' .cshrc/.login files,
   if csh is used, with commands, for example,
      setenv GOEDEL_RUNTIME /usr/local/lib/goedel/runtime
      setenv SP_PATH /usr/local/lib/goedel/runtime

   or in .bashrc/.profile files, if bash is used,
      export GOEDEL_RUNTIME=/usr/local/lib/goedel/runtime
      export SP_PATH=/usr/local/lib/goedel/runtime

%------------------------------------------------------------------------------

If you have any problems concerning the installation of the Goedel system,
please contact:
	goedel@compsci.bristol.ac.uk.
